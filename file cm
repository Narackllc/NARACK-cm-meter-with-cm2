// generated by Narack.llc for <cm meter and cm2 meter>
// codes make narack.llc

#include "src/MatrizLed.h"
#include "src/HCSR04.h"
#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>

float datos_ariba = 0;
float datos_cm_alado = 0;
float datos_cm = 0;

MatrizLed matriz;
String isturnOn, figure, figure2;
UltraSonicDistanceSensor distanceSensor_2(2,3);
int num_matriz8x8redondo;
String yourString_matriz8x8;

void _delay(float seconds) {
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  pinMode(7,OUTPUT);
  matriz.begin(4,6,5,1);
  pinMode(11,OUTPUT);
  pinMode(12,OUTPUT);
  Serial.begin(9600);
  pinMode(13,INPUT);
  digitalWrite(7,1);

  figure = "0000000000111100010000100101001001010010010000100011110010000000";
  delay(100);
    for(int counter = 0; counter < 8; counter++) {
      figure2=figure.substring(counter*8,(counter+1)*8);
        for(int counter2 = 0; counter2 < 8; counter2++) {
        isturnOn=figure2.substring(counter2,counter2+1);
          if(isturnOn=="1"){
             matriz.setLed(0,(counter),(7-counter2),true);
            }
          else{
            matriz.setLed(0,(counter),(7-counter2),false);
            }
        }
    }
  tone(11,1397,0.25*1000);
  delay(0.25*1000);
  digitalWrite(12,0);

  _delay(6);
  while(1) {
      if(digitalRead(13) == LOW){
          while(1) {
              tone(11,3951,0.25*1000);
              delay(0.25*1000);
              num_matriz8x8redondo = round((distanceSensor_2.measureDistanceCm() / 1));
              yourString_matriz8x8 = String(num_matriz8x8redondo);
              matriz.escribirFraseScroll((char*) yourString_matriz8x8.c_str(),90);
              Serial.print((distanceSensor_2.measureDistanceCm() / 1));
              Serial.println("cm");

              _loop();
          }

      }
      if(digitalRead(13) == HIGH){
          figure = "0000110000111100001111000000110000001100001111000011110000001100";
          delay(100);
            for(int counter = 0; counter < 8; counter++) {
              figure2=figure.substring(counter*8,(counter+1)*8);
                for(int counter2 = 0; counter2 < 8; counter2++) {
                isturnOn=figure2.substring(counter2,counter2+1);
                  if(isturnOn=="1"){
                     matriz.setLed(0,(counter),(7-counter2),true);
                    }
                  else{
                    matriz.setLed(0,(counter),(7-counter2),false);
                    }
                }
            }
          _delay(5);
          datos_ariba = (distanceSensor_2.measureDistanceCm() / 1);
          tone(11,1976,0.25*1000);
          delay(0.25*1000);
          figure = "0000000000000000111111111111111101100110011001100000000000000000";
          delay(100);
            for(int counter = 0; counter < 8; counter++) {
              figure2=figure.substring(counter*8,(counter+1)*8);
                for(int counter2 = 0; counter2 < 8; counter2++) {
                isturnOn=figure2.substring(counter2,counter2+1);
                  if(isturnOn=="1"){
                     matriz.setLed(0,(counter),(7-counter2),true);
                    }
                  else{
                    matriz.setLed(0,(counter),(7-counter2),false);
                    }
                }
            }
          _delay(5);
          datos_cm_alado = (distanceSensor_2.measureDistanceCm() / 1);
          tone(11,1976,0.25*1000);
          delay(0.25*1000);
          figure = "0000000001111110010000100100001001000010010000100111111000000000";
          delay(100);
            for(int counter = 0; counter < 8; counter++) {
              figure2=figure.substring(counter*8,(counter+1)*8);
                for(int counter2 = 0; counter2 < 8; counter2++) {
                isturnOn=figure2.substring(counter2,counter2+1);
                  if(isturnOn=="1"){
                     matriz.setLed(0,(counter),(7-counter2),true);
                    }
                  else{
                    matriz.setLed(0,(counter),(7-counter2),false);
                    }
                }
            }
          _delay(5);
          Serial.print(datos_ariba * datos_cm_alado);
          Serial.println("  CM2");
          while(1) {
              num_matriz8x8redondo = round(datos_ariba * datos_cm_alado);
              yourString_matriz8x8 = String(num_matriz8x8redondo);
              matriz.escribirFraseScroll((char*) yourString_matriz8x8.c_str(),90);

              _loop();
          }

      }

      _loop();
  }

}

void _loop() {
}

void loop() {
  _loop();
}
